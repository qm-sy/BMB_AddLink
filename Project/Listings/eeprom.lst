C51 COMPILER V9.60.7.0   EEPROM                                                            03/20/2025 22:37:33 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN ..\Output\eeprom.obj
COMPILER INVOKED BY: D:\APP\Keil_STM32\C51\BIN\C51.EXE ..\Core\Src\eeprom.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP
                    -\Inc;..\Core\Inc;..\Drivers;..\Middlewares;..\Emembed\Inc;..\SYSTEM\Inc) DEBUG OBJECTEXTEND PRINT(.\Listings\eeprom.lst)
                    - OBJECT(..\Output\eeprom.obj)

line level    source

   1          #include "eeprom.h"
   2          
   3          #define EEPROM_Idle     0x00
   4          #define EEPROM_Read     0x01
   5          #define EEPROM_Write    0x02
   6          #define EEPROM_Earse    0x03
   7          
   8          #define EEPROM_Enable   0x80        //使能EEPROM操作 
   9          #define EEPROM_Disable  0x00        //禁止EEPROM操作
  10          
  11          #define EEPROM_Crl_Time 0x03        //@11.0592MHz CPU等待时间>=12MHz 
  12          
  13          /**
  14           * @brief       将单片机设置为ISP空闲状态
  15           *
  16           * @param   void
  17           *
  18           * @return  
  19          **/
  20          static void ISP_Idle()
  21          {
  22   1          IAP_CONTR = EEPROM_Disable;     
  23   1          IAP_CMD   = EEPROM_Idle;        
  24   1          
  25   1          /* 每次EEPROM操作前，需要IAP_TRIG先写0x5A，再写 0xA5,不操作则赋0清空  */
  26   1          IAP_TRIG  = 0X00;              
  27   1      
  28   1          IAP_ADDRH = 0X80;               //将地址设置到非IAP区域
  29   1          IAP_ADDRL = 0X00;               //清空地址低位
  30   1      }
  31          
  32          /**
  33           * @brief       EEPROM 擦除目标地址所在的一页（1扇区/512字节）
  34           *
  35           * @param   addr：目标地址
  36           *
  37           * @return  
  38          **/
  39          void ISP_Earse( uint16_t addr )
  40          {   
  41   1          IAP_CONTR |= EEPROM_Enable;   
  42   1          IAP_CONTR |= EEPROM_Crl_Time;      
  43   1      
  44   1          IAP_CMD   = EEPROM_Earse;      
  45   1      
  46   1          IAP_ADDRL = addr;
  47   1          IAP_ADDRH = addr>>8;
  48   1          
  49   1          /*      发送命令         */
  50   1          IAP_TRIG  = 0X5A;       
  51   1          IAP_TRIG  = 0XA5;                                    
  52   1          
  53   1          delay_ms(10);
C51 COMPILER V9.60.7.0   EEPROM                                                            03/20/2025 22:37:33 PAGE 2   

  54   1          
  55   1          ISP_Idle();
  56   1      }
  57          
  58          /**
  59           * @brief       EEPROM 写入函数
  60           *
  61           * @param   addr：目标地址
  62           * @param   dat ：写入的值
  63           *
  64           * @return  
  65          **/
  66          void ISP_Write( uint16_t addr, uint8_t dat )
  67          {
  68   1          IAP_CONTR |= EEPROM_Enable;   
  69   1          IAP_CONTR |= EEPROM_Crl_Time;    
  70   1      
  71   1          IAP_CMD   = EEPROM_Write;       
  72   1      
  73   1          IAP_ADDRL = addr;
  74   1          IAP_ADDRH = addr>>8;
  75   1      
  76   1          IAP_DATA  = dat;
  77   1      
  78   1          /*      发送命令         */
  79   1          IAP_TRIG  = 0X5A;
  80   1          IAP_TRIG  = 0XA5;
  81   1          
  82   1          delay_ms(10);
  83   1          
  84   1          ISP_Idle();
  85   1      }
  86          
  87          /**
  88           * @brief       EEPROM 读取函数
  89           *
  90           * @param   addr：目标地址
  91           *
  92           * @return  dat：目标地址对应的值
  93          **/
  94          uint8_t ISP_Read( uint16_t addr )
  95          {
  96   1          uint8_t dat;
  97   1          
  98   1          IAP_CONTR |= EEPROM_Enable;   
  99   1          IAP_CONTR |= EEPROM_Crl_Time;    
 100   1      
 101   1          IAP_CMD   = EEPROM_Read;       
 102   1      
 103   1          IAP_ADDRL = addr;
 104   1          IAP_ADDRH = addr>>8;
 105   1          
 106   1          /*      发送命令         */
 107   1          IAP_TRIG  = 0X5A;
 108   1          IAP_TRIG  = 0XA5;
 109   1          
 110   1          delay_ms(10);
 111   1          
 112   1          dat = IAP_DATA;
 113   1          
 114   1          ISP_Idle();
 115   1          
C51 COMPILER V9.60.7.0   EEPROM                                                            03/20/2025 22:37:33 PAGE 3   

 116   1          return dat;
 117   1      }
 118          
 119          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    109    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
